[user]
	name = Zakaria Fadli
	email = zakaria.fadli@legrand.com

[pull]
  rebase = true

[push]
  default = upstream

[core]
	editor = nvim
	excludesfile = /home/zfadli/.gitignore_global

[status]
  submoduleSummary = false

[alias]
  yolo = !git commit -m \"$(curl -s whatthecommit.com/index.txt)\"
  cof = !git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git checkout
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"

# Settings for rebase
[sequence]
	editor = rebase-editor -s -c -m '> ' --no-alternate-screen
[rebase]
  autosquash = true

# Settting for difftool

[diff]
  tool = difft
[difftool]
  prompt = false
[difftool "difft"]
  cmd = difft "$LOCAL" "$REMOTE"
[difftool "meld"]
  cmd = meld "$LOCAL" "$REMOTE"

# Settings for mergetool ( = meld )
[merge]
  tool = meld
[mergetool "meld"]
  # Choose one of these 2 lines (not both!) explained below.
  # cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"
  cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
[mergetool]
  prompt = false
	keepBackup = false

# Settings for delta (better git diff, git show etc..)
[core]
  pager = delta

[interactive]
  diffFilter = delta --color-only

[add.interactive]
  useBuiltin = false # required for git 2.37.0

[delta]
  navigate = true    # use n and N to move between diff sections
  light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
  line-numbers = true

[merge]
  conflictstyle = diff3

[diff]
  colorMoved = default
  # Recent versions of Git (â‰¥ v2.17, April 2018) are able to detect moved blocks of code and style them
  # differently from the usual removed/added lines. If you have activated this feature in Git, then Delta
  # will automatically detect such differently-styled lines, and display them unchanged, i.e. with the raw
  # colors it receives from Git.
[credential "https://github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential

[user]
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGZls1eU2p5k1a7BGXV0b8Q2iU8g9tkPGd67ruznGSsp

[gpg]
  format = ssh

[gpg "ssh"]
  program = "/opt/1Password/op-ssh-sign"
